{
  "environment": {
    "INDY_NETWORK": "sovrin-mainnet"
  },
  "comments": {
    "description": {
      "1": "This is sample daemon configuration for reading data out of old Elasticsearch index, running it though",
      "2": "a transformation processor and storing in new Elasticsearch index. It will do so for all 3 subledgers."
    }
  },
  "objects": [
    {
      "interface": "SOURCE",
      "impl": "elasticsearch",
      "params": {
        "id": "source.$INDY_NETWORK",
        "url": "$URL_ELASTICSEARCH",
        "subledger": "domain",
        "index": "txs-$INDY_NETWORK"
      }
    },
    {
      "interface": "SOURCE",
      "impl": "elasticsearch",
      "params": {
        "id": "source.$INDY_NETWORK",
        "url": "$URL_ELASTICSEARCH",
        "subledger": "domain",
        "index": "txs-$INDY_NETWORK-new"
      }
    },
    {
      "interface": "TARGET",
      "impl": "elasticsearch",
      "params": {
        "id": "target.$INDY_NETWORK",
        "url": "$URL_ELASTICSEARCH",
        "replicas": 1,
        "index": "txs-$INDY_NETWORK-new"
      }
    },
    {
      "interface": "ITERATOR",
      "impl": "guided-iterator",
      "params": {
        "id": "iterator.$INDY_NETWORK",
        "source": "@@source.$INDY_NETWORK",
        "sourceSeqNoGuidance": "@@source.target.$INDY_NETWORK"
      }
    },
    {
      "interface": "PROCESSOR",
      "impl": "expansion",
      "params": {
        "id": "processor.expansion.$INDY_NETWORK",
        "sourceDomainLookups": "@@source.target.$INDY_NETWORK.domain"
      }
    },
    {
      "interface": "PIPELINE",
      "impl": "sequential",
      "params": {
        "id": "pipeline.$INDY_NETWORK.domain",
        "iterator": "@@iterator.$INDY_NETWORK.domain",
        "requestTxFormat": "original",
        "processor": "@@processor.expansion.$INDY_NETWORK",
        "target": "@@target.$INDY_NETWORK.domain",
        "timing": {
          "timeoutOnSuccess": 1000,
          "timeoutOnIteratorError": 5000,
          "timeoutOnTxNotAvailable": 4000,
          "jitterRatio": 0.4
        }
      }
    },
    {
      "interface": "PIPELINE",
      "impl": "sequential",
      "params": {
        "id": "pipeline.$INDY_NETWORK.config",
        "iterator": "@@iterator.$INDY_NETWORK.config",
        "requestTxFormat": "original",
        "processor": "@@processor.expansion.$INDY_NETWORK",
        "target": "@@target.$INDY_NETWORK.config",
        "timing": {
          "timeoutOnSuccess": 1000,
          "timeoutOnIteratorError": 5000,
          "timeoutOnTxNotAvailable": 4000,
          "jitterRatio": 0.4
        }
      }
    },
    {
      "interface": "PIPELINE",
      "impl": "sequential",
      "params": {
        "id": "pipeline.$INDY_NETWORK.pool",
        "iterator": "@@iterator.$INDY_NETWORK.pool",
        "requestTxFormat": "original",
        "processor": "@@processor.expansion.$INDY_NETWORK",
        "target": "@@target.$INDY_NETWORK.pool",
        "timing": {
          "timeoutOnSuccess": 1000,
          "timeoutOnIteratorError": 5000,
          "timeoutOnTxNotAvailable": 4000,
          "jitterRatio": 0.4
        }
      }
    }
  ]
}
